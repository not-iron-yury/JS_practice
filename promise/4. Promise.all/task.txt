Отлов и продолжение цепочки

Promise.all([...]) ожидает все промисы, и возвращает массив результатов.
Если один упадёт, вся цепочка завершится с ошибкой.

Promise.all([promise1, promise2, promise3])
  .then(results => {
    // results — массив из 3 результатов
  })
  .catch(err => {
    // если хоть один упал — сюда
  });


Создай 3 функции:
1. loadPart1, loadPart2, loadPart3 — возвращают промисы, которые резолвятся с задержкой 300–800 мс с текстом "Часть 1", "Часть 2", "Часть 3"
2. Используй Promise.all, чтобы запустить их параллельно
3. Выведи массив результатов, когда все части загружены
4. Добавь catch на случай, если какая-то часть "падает" с вероятностью 20%
