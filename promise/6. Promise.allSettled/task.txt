Promise.allSettled
Этот метод запускает сразу несколько промисов и ждёт завершения всех — вне зависимости от успеха или ошибки.
В отличие от Promise.all, который падает при первой ошибке, allSettled возвращает массив объектов с информацией:

[
  { status: 'fulfilled', value: 'результат' },
  { status: 'rejected', reason: 'ошибка' }
]

Примечания:
1) status — всегда есть, и принимает только одно из двух значений: "fulfilled" или "rejected"
2) value — только при fulfilled
3) reason — только при rejected
4) Никаких других свойств не будет, даже если resolve() или reject() передали сложные объекты — они окажутся внутри value или reason



Promise.allSettled([loadPart1(), loadPart2(), loadPart3()])
  .then(results => {
    results.forEach((result, index) => {
      if (result.status === 'fulfilled') {
        console.log(`Часть ${index + 1} загружена:`, result.value);
      } else {
        console.warn(`Часть ${index + 1} не загрузилась:`, result.reason.message);
      }
    });
  });


Применение:
Такой подход полезен, например, когда:
1) нужно загрузить несколько независимых данных (например, карточки товаров)
2) можно показать то, что получилось, даже если часть упала
3) нужно собрать все ошибки, а не только первую
