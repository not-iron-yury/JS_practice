                                  _protected / _private по соглашению         #private
Доступ снаружи                    ✅ Доступно (но не рекомендуется)          ❌ Недоступно (на уровне языка)
Работает везде?	                  ✅ Работает везде                           ❗ Только в ES2022+ (новые браузеры/среды)
Можно переопределить в наследнике	✅ Да, и это может быть нужно              ❌ Нет, это прямое нарушение инкапсуляции
Отображается в Object.keys()	    ✅ Да                                      ❌ Нет
Сериализация (JSON.stringify)	    ✅ Входит                                  ❌ Пропускается
Можно получить через обход
(например, через Proxy)	          ✅ Да                                      ❌ Нет


Когда использовать #:
1. Когда реально нужно скрыть внутренности класса от всех.
2. Когда важна безопасность (например, храним пароли, ключи и т.п.).
3. Когда ты пишешь библиотеку или модуль, и хочешь защитить API от неправильного использования.


Когда использовать _:
1. Когда нужна гибкость, особенно в наследовании.
2. Когда ты хочешь оставить "путь внутрь" для опытных разработчиков.
3. Когда проект ещё поддерживает старые среды, где # не работает.
4. Когда нужны инструменты вроде сериализации, логирования, проксирования и тестирования.
